Authors: Brian Rhee, Robbie Young


1. Alice and Bob first use Diffie-Hellman to agree on a shared secret key K. Then, Alice encrypts the message M using AES(K, M) to create a ciphertext C, which is then sent to Bob. Bob then decrypts C using AES_C(K, C) to get the original message M.
2. Alice and Bob first use Diffie-Hellman to agree on a shared secret key K. Then, Alice creates a digest (D) of her message concatenated to the secret key by hashing it with SHA-256; this produces D such that D = H(M || K). Alice then concatenates D to M as M || D and sends the concatenated message to Bob. If Mal modifies the message to M’, D will not equate to H(M’ || K). Mal will not be able to recreate D with M’ as Mal does not have access to K.
3. First, Alice and Bob use Diffie-Hellman to agree on a shared secret key K. Then, Alice encrypts the message M using AES(K, M) to create ciphertext C. 
To ensure Bob that Alice is the one sending across the contract, Alice will create a digital signature (Sig) to concatenate to the end of the encrypted message. To do this, she can begin by using SHA-256 to create a digest (D) of her encrypted message and hashing it with SHA-256; this produces D such that D = H(C). Alice then computes a Sig such that Sig = E(S_A, D). Once Alice computes Sig, she concatenates it onto the end of her ciphertext C, such that the resulting message she sends across to Bob is C || Sig. 
Bob will use P_A, Alice’s public key, to decrypt this signature, which will only be possible if the signature was encoded using Alice’s private key (which is presumably only available to Alice herself). Bob can also compare D1 from Alice’s Sig with D2 that he calculates from the encrypted message to see if the two align. Bob will be able to compute E(P_A, Sig) to derive D1 from Sig, and he can calculate D2 through H(C). If D1 and D2 are equal, then Bob can be confident that Alice had meant to send over the contents of the message that she intended.
4. Alice could first claim that somebody got ahold of her private key. The judge might find this plausible depending on Alice’s tendencies regarding security; however, he would most likely rule this to be Alice’s fault, as she is supposed to keep her private key … private. Alice could also claim that solar flares interfered with the encrypted contract and the digest perfectly such that the math still works. However this is not very plausible, as first solar flares are rare and second pretty rare (also, it is highly unlikely that they would interfere with the data in such a way that would support Alice’s case). Finally, Alice might claim that she had accidentally signed and sent an incorrect version of the contract in question. This would lie outside the realm of security in cryptography, and the judge would find this plausible. Again, though, the judge would most likely rule Alice to be culpable in this situation for having signed and sent over the wrong document. 
5. Sig_CA includes a Digest (D) of the beginning portion, or To Be Signed portion, of the certificate. This includes “bob.com” concatenated with P_B. D will therefore come out to be equal to H(“bob.com” || P_B). The Certificate Authority then takes this Digest and encrypts it using their own secret key, S_CA – this will return the final Sig_CA. Thus, the condensed formula CA used to calculate Sig_CA can be given as such: Sig_CA = E(S_CA, H(“bob.com” || P_B). 
6. For Bob to have Cert_B does not sufficiently prove that Alice is talking to Bob. Cert_B proves to Alice that the domain “bob.com” is associated with P_B. In this regard, Alice can be certain that whoever is controlling “bob.com” has control of the public key P_B. In order for Bob to prove to Alice that 1. The P_B on “bob.com” is legitimate, 2. Bob has control of the secret key S_B, and 3. He is Bob, Bob and Alice can undergo the following protocol. 
First, Alice and Bob can use Diffie-Hellman to agree on a secret shared key K. Next, Alice can send Bob a randomly generated number R. After that, Bob will create a Digest (D) of his secret shared key K concatenated with R. This will come out to D = H(K || R). Bob will then encrypt this using his secret key S_B as such: E(S_B, D). Alice can decrypt Bob’s message using the public key she finds from “bob.com”; this should allow her to compute D. After performing another computation of H(K || R), because presumably only Alice and Bob have access to K and R, Alice can confirm whether or not the D she received from Bob’s message is equal to H(K || R). This process would prove to Alice that P_B is legitimate, Bob knows S_B, and that Bob is indeed Bob. 
7. One way Mal could convince Alice that Mal is Bob is by convincing a legitimate CA that Mal has their own private and public keys associated with “bob.com”. This would mean that unless Alice were to do the protocol described in #6, Alice would have no way of knowing that the public key she is using is not P_B, but rather P_Mal. Mal could then undergo the process of a PITM attack by intercepting the Diffie-Hellman key exchange between Alice and Bob, and pass the challenge that Alice poses to herself. 
Another way Mal could convince Alice that Mal is Bob is by stealing S_CA and using that to falsify a certificate stating that Mal’s P_Mal is actually Bob’s P_B. Then, similarly to the last method, Mal would perform a PITM attack and intercept the Diffie-Hellman key exchange and convince Alice that Mal is Bob.